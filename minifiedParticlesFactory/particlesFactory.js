export default class t{#a;#b;constructor(t){let{canvasId:i="",numParticles:s=300,speed:e=.5,strokeColor:h="#fff",fillColor:a="#000",connectDistance:n=100,mouseDistance:l=100}=t;this.canvas=document.getElementById(i),this.#a=this.canvas.getContext("2d"),this.numParticles=s,this.speed=e,this.strokeColor=h,this.fillColor=a,this.connectDistance=n,this._mouseDistance=l,this.animationId=null,this.#b=[],this.canvas.addEventListener("pointermove",t=>{this.#c(t)}),this.drawParticles(),this.#d()}drawParticles(){this.#b=[];for(let t=0;t<this.numParticles;t++)this.#b.push(new Particle(Math.random()*(this.canvas.width-4)+2,Math.random()*(this.canvas.height-4)+2,2,this.speed))}#e(t,i,s,e){return Math.sqrt((s-t)**2+(e-i)**2)}#c(h){let a=this.canvas.getBoundingClientRect(),{left:n,top:l,width:c,height:o}=a,r=h.clientX-n,d=h.clientY-l;for(let x of this.#b)if(this.#e(x.x,x.y,r,d)<this._mouseDistance){let m=r-x.x,p=d-x.y,y=Math.sqrt(m*m+p*p);m/=y,p/=y;let $=x.x+-(5*m),f=x.y+-(5*p);x.x=Math.min(Math.max($,x.size),c-x.size),x.y=Math.min(Math.max(f,x.size),o-x.size)}}#d(){this.#a.fillStyle=this.fillColor,this.#a.lineWidth=.5,this.#a.fillRect(0,0,this.canvas.width,this.canvas.height);for(let u=0;u<this.#b.length;u++){let g=this.#b[u];for(let v=u+1;v<this.#b.length;v++){let z=this.#b[v],S=this.#e(g.x,g.y,z.x,z.y)<=this.connectDistance;S&&(this.#a.beginPath(),this.#a.moveTo(g.x,g.y),this.#a.lineTo(z.x,z.y),this.#a.strokeStyle=this.strokeColor,this.#a.stroke())}g.update()}this.animationId=requestAnimationFrame(this.#d.bind(this))}#f(){cancelAnimationFrame(this.animationId),this.animationId=null}toggleAnimation(){this.animationId?this.#f():this.#d()}};class Particle{constructor(t,i,s,e){this.x=t,this.y=i,this.size=s,this.xSpeed=e*(6*Math.random()-3),this.ySpeed=e*(6*Math.random()-3)}draw(t,i){t.fillStyle=i,t.fillRect(this.x,this.y,10,10)}update(){(this.x<=this.size||this.x>=canvas.width-this.size)&&(this.xSpeed*=-1),(this.y<=this.size||this.y>=canvas.height-this.size)&&(this.ySpeed*=-1),this.x+=this.xSpeed,this.y+=this.ySpeed}}